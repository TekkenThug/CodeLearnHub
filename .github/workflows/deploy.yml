name: Deploy

on: [push]

jobs:
  backend:
    runs-on: ubuntu-latest

    defaults:
      run:
        working-directory: ./src

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set SSH key
        run: set -eu && mkdir "$HOME/.ssh" && echo "${{ secrets.key }}" > "$HOME/.ssh/key" && chmod 600 "$HOME/.ssh/key"

      - name: Configure PHP
        uses: shivammathur/setup-php@master
        with:
          php-version: 8.2.7
          extension: mbstring, ctype, fileinfo, openssl, PDO, bcmath, json, tokenizer, xml

      - name: Install Composer dependencied
        run: composer install --no-interaction --prefer-dist

      - name: Create deployment artifact
        run: tar -czf app.tar.gz --exclude=*.git --exclude=node_modules *

      - name: Pass artifact to the server
        run: rsync -e "sshpass -p ${{ secrets.ROOT_PASSWORD }} ssh -i $HOME/.ssh/key -o StrictHostKeyChecking=no" --archive --compress --delete app.tar.gz root@${{ secrets.SERVER_IP }}:~/

      - name: Run bash script
        uses: appleboy/ssh-action@master
        env:
          LARAVEL_ENV: ${{ secrets.LARAVEL_ENV }}
        with:
          host: ${{ secrets.SERVER_IP }}
          username: root
          password: ${{ secrets.ROOT_PASSWORD }}
          key: ${{ secrets.KEY }}
          envs: LARAVEL_ENV
          script: |
            sudo systemctl stop laravel-app
            cd ~/
            rm -r ./laravel/*
            tar -xf app.tar.gz -C ./laravel
            rm app.tar.gz
            echo "${LARAVEL_ENV}" > ./laravel/.env
            sudo systemctl start laravel-app

  # frontend:
  #   runs-on: ubuntu-latest

  #   defaults:
  #     run:
  #       working-directory: ./frontend

  #   steps:
  #     - name: Checkout
  #       uses: actions/checkout@v3

  #     - name: Set SSH key
  #       run: set -eu && mkdir "$HOME/.ssh" && echo "${{ secrets.key }}" > "$HOME/.ssh/key" && chmod 600 "$HOME/.ssh/key"

  #     - name: Set up Node.js
  #       uses: actions/setup-node@v2
  #       with:
  #         node-version: '16'

  #     - name: Install dependencies
  #       run: npm install

  #     - name: Install nuxi
  #       run: npm i @nuxt/kit

  #     - name: Generate project files
  #       run: npx nuxi generate

  #     - name: Deploy frontend via SSH
  #       run: |
  #         cd .output/public
  #         rsync -e "sshpass -p ${{ secrets.ROOT_PASSWORD }} ssh -i $HOME/.ssh/key -o StrictHostKeyChecking=no" --archive --compress --delete . root@${{ secrets.SERVER_IP }}:/var/www/html